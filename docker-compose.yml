version: '3'

services:
  neo4j: 
    image: neo4j
    environment:
      - NEO4J_AUTH=none
    volumes:
      - neo4j:/data
    ports:
      - "7474:7474"
      - "7687:7687"

  minio:
    image: minio/minio
    command: [server, /data]
    hostname: minio
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    volumes:
      - minio:/data
    ports:
      - "9000:9000"

  mongo:
    image: mongo
    hostname: mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=spassDatabase
    ports:
      - "27017:27017"

  redis:
    image: redis
    hostname: redis
    ports:
      - "6379:6379"

  authserver:
    build: 
      context: ./auth-server
      dockerfile: Dockerfile
    depends_on:
        - redis
        - mongo
    ports:
      - "3000:3000"
    environment:
      - SPASS_CONNECTION_STRING=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017/?ssl=false
      - SPASS_CELERY_BROKER=redis://redis

  # backend:
  #   build:
  #     context: ./back-end
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - redis
  #     - mongo
  #     - minio
  #     - authserver
  #   environment:
  #     - SPASS_CELERY_BROKER=redis://redis
  #     - SPASS_CONNECTION_STRING=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017/?ssl=false
  #     - BLOB_MECHANISM
  #     - MINIO_ENDPOINT=minio:9000
  #     - MINIO_SECRET_KEY
  #     - MINIO_ACCESS_KEY
  #   ports:
  #     - "5000:5000"

  frontend:
    build:
      context: ./front-end
      dockerfile: Dockerfile-Dev
    depends_on:
      # - backend
      - authserver
    ports:
      - "4200:4200"

volumes:
  minio:
  neo4j: